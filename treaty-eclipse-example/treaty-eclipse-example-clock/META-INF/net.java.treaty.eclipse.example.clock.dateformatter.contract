<?xml version="1.0" encoding="UTF-8"?><!-- example contract as used in the prototype --><contract xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://treaty.googlecode.com/svn/tags/v1.1/schema/treaty.xsd">	<consumer>		<resource id="Interface">			<type>http://www.treaty.org/java#AbstractType</type>			<!-- this is the actual class name, it can be loaded with the plugin classloader -->			<name>net.java.treaty.eclipse.example.clock.DateFormatter</name>		</resource>		<resource id="QoSTests">			<type>http://www.treaty.org/junit#TestCase</type>			<name>net.java.treaty.eclipse.example.clock.DateFormatterPerformanceTests</name>		</resource>			<resource id="FunctionalTests">			<type>http://www.treaty.org/junit#TestCase</type>			<name>net.java.treaty.eclipse.example.clock.DateFormatterFunctionalTests</name>		</resource>				<resource id="DateFormatDef">			<type>http://www.treaty.org/xml#XMLSchema</type>			<name>/dateformat.xsd</name>		</resource>		</consumer>	<supplier>		<resource id="Formatter">			<type>http://www.treaty.org/java#InstantiableClass</type>			<ref>/serviceprovider/@class</ref>		</resource>		<resource id="FormatString">			<type>http://www.treaty.org/xml#XMLInstance</type>			<ref>/serviceprovider/@formatdef</ref>		</resource>		</supplier>	<constraints>			<xor>			<and>				<condition resource1="Formatter" resource2="Interface" relationship="http://www.treaty.org/java#implements"/>				<condition resource1="Formatter" resource2="FunctionalTests" relationship="http://www.treaty.org/junit#verifies"/>				<condition resource1="Formatter" resource2="QoSTests" relationship="http://www.treaty.org/junit#verifies"/>			</and>			<condition resource1="FormatString" resource2="DateFormatDef" relationship="http://www.treaty.org/xml#instantiates"/>			</xor>	</constraints></contract>