package net::java::treaty::eclipse::vocabulary::ocl::test::base::model


-- Test Attribute Definition Preparation --

-- Define a new attribute which is used by following constraints.
context TestInterface
def: senseOfLife: Integer = 42

-- The senseOfLife must be 42.
context TestInterface
inv isLifeSensible01: self.senseOfLife = 42


-- Test Method Definition Preparation --

-- Define a new method which is used by following constraints.
context TestInterface
def: getSenseOfLife(): Integer = 42

-- The method getSenseOfLife must return 42.
context TestInterface
inv isLifeSensible02: self.getSenseOfLife() = 42

-- Define a new method with arguments which is used by following constraints.
context TestInterface
def: getIntValue(value: Integer): Integer = value

-- The method getIntValue must return the given value.
context TestInterface
inv getIntValueIsCorrect: self.getIntValue(42) = 42


-- Test Derive Attribute Definition Preparation --
context TestInterface::name
derive: self.getName()

-- The value of the attribute name must equal the result of getName()
context TestInterface
inv isNameSet: self.name = self.getName()


-- Test Body Method Implementation Preparation --
context TestInterface::getName(): String
body: 'net::java::treaty::eclipse::vocabulary::ocl::test::modelTestInterface'

-- Test the result of getName().
context TestInterface
inv isGetNamePrepared: self.getName() = 'net::java::treaty::eclipse::vocabulary::ocl::test::modelTestInterface' 


-- Test Init Attribute Initialization Preparation --
context TestInterface::simpleName
init: 'TestInterface'

-- Test if the attribute simpleName has been initialized. 
context TestInterface
inv isSimpleNameInitialized: not self.simpleName.oclIsUndefined()


-- Test Precondition Interpretation --
-- The Interface should be initialized before method invocation.
context TestInterface::getName(): String
pre isInterfaceInitialized: not self.oclIsUndefined()


-- Test Postcondition Interpretation --
-- The result of getName() should not be undefined.
context TestInterface::getName(): String
post isResultDefined: not result.oclIsUndefined()

-- The defined method getIntValue() should return the given Integer.
context TestInterface::getIntValue(arg01: Integer): Integer
post isResultInput: result = arg01

-- A postcondition to test the method allInstances.
context TestInterface::getName(): String
post isAllInstancesAvailable: self.allInstances()->includes(self)

-- A postcondition to test the method oclIsNew.
context TestInterface::getName(): String
post isOclIsNewAvailable: not self.oclIsNew()


endpackage