<?xml version="1.0" encoding="UTF-8"?><!-- example contract as used in the prototype --><contract xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="contract.xsd">	<extensionpoint id="dateformatter">		<resource id="R1">			<type>http://www.massey.ac.nz/se/plugincontracts/java/AbstractType</type>			<!-- this is the actual class name, it can be loaded with the plugin classloader -->			<name>nz.ac.massey.treaty.example.DateFormatter</name>		</resource>		<resource id="R3">			<type>http://www.massey.ac.nz/se/plugincontracts/xml/XMLSchema</type>			<name>dateformat.xsd</name>		</resource>		<resource id="R5">			<type>http://www.massey.ac.nz/se/plugincontracts/junit/TestCase</type>			<name>nz.ac.massey.treaty.example.DateFormatterFunctionalTests</name>		</resource>		<resource id="R6">			<type>http://www.massey.ac.nz/se/plugincontracts/junit/TestCase</type>			<name>nz.ac.massey.treaty.example.DateFormatterPerformanceTests</name>		</resource>			</extensionpoint>	<extension>		<resource id="R2">			<type>http://www.massey.ac.nz/se/plugincontracts/java/InstantiableClass</type>			<!-- i.e., the class name will be defined by a parameter "class" in plugin.xml -->			<ref>class</ref>		</resource>		<resource id="R4">			<type>http://www.massey.ac.nz/se/plugincontracts/xml/XMLInstance</type>			<ref>formatdef</ref>		</resource>	</extension>	<constraints>		<xor>			<and>				<condition resource1="R2" resource2="R1" relationship="http://www.massey.ac.nz/se/plugincontracts/java/implements"/>				<condition resource1="R2" resource2="R5" relationship="http://www.massey.ac.nz/se/plugincontracts/junit/verifies"/>				<condition resource1="R2" resource2="R6" relationship="http://www.massey.ac.nz/se/plugincontracts/junit/verifies"/>			</and>			<condition resource1="R4" resource2="R3" relationship="http://www.massey.ac.nz/se/plugincontracts/xml/instantiates"/>					</xor>	</constraints></contract>